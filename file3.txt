----To use multiple java versions on MacOS----

1. Check if you have multiple JAVA versions installed: /usr/libexec/java_home -V
    Output: Matching Java Virtual Machines (4):
            17.0.5 (x86_64) "Amazon.com Inc." - "Amazon Corretto 17" /Users/username/Library/Java/JavaVirtualMachines/corretto-17.0.5/Contents/Home
            11.0.10 (x86_64) "Oracle Corporation" - "Java SE 11.0.10" /Library/Java/JavaVirtualMachines/jdk-11.0.10.jdk/Contents/Home
            1.8.144.01 (x86_64) "Oracle Corporation" - "Java" /Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home

2. Add the following to .zshrc:
    export JAVA_11_HOME=$(/usr/libexec/java_home -v 11.0.10)
    export JAVA_17_HOME=$(/usr/libexec/java_home -v 17.0.5)
    alias java11='export JAVA_HOME=$JAVA_11_HOME'
    alias java17='export JAVA_HOME=$JAVA_17_HOME'
    
3. Press- :wq and save changes. 
4. Run- source .zshrc
5. Run java11 to use JDK 11 and java17 to use JDK 17. Check if you are using desired version by running java -version 

-----To remove a specific Java version from MacOS------
Run this command to just remove the JDK: 
           sudo rm -rf /Library/Java/JavaVirtualMachines/jdk<version>.jdk
see more at: https://stackoverflow.com/questions/19039752/removing-java-8-jdk-from-mac

------ Resolving checkstyle issues automatically ------
see last answer: https://stackoverflow.com/questions/19952500/how-fix-all-check-style-issues-with-intellij-idea


------ Make sure intelliJ doesn't use wildcard imports ( * )
1. Go to : Preferences > Editor > Code Style > Java > Imports
2. Select "Use single name import" and remove all packages from the below list you see there
3. Set Class count to use import with '*' to 999
4. Set Names count to use static import with '*' to 999
see here : https://stackoverflow.com/questions/3348816/intellij-never-use-wildcard-imports/25916603#25916603


------ Migrating from Spring Boot 2 to 3.x.x
see first and second answer here: https://stackoverflow.com/questions/74931848/spring-boot-3-x-upgrade-could-not-resolve-org-springframework-bootspring-boot

also see: https://www.youtube.com/watch?v=VWdNfvNFXUc


------ To merge changes from master branch into feature branch------
https://www.togaware.com/linux/survivor/Git_Merge_Master_into.html


------ Convert plain Java project to Maven project -----
https://www.jetbrains.com/help/idea/convert-a-regular-project-into-a-maven-project.html#add_maven_support
basically: right click on your project root and click on Add Framework support (refer: https://stackoverflow.com/a/76298792/11738929)


-----To use multiple aws profiles (accounts) in CLI-------

See: https://stackoverflow.com/questions/593334/how-to-use-multiple-aws-accounts-from-the-command-line

-> To see the current aws account being used in CLI: aws sts get-caller-identity --query "Account" --output text



IF YOU GET THE ERROR: Cannot Resolve Symbol @SpringBootApplication - IntelliJ DEA

TRY - Second answer here: https://stackoverflow.com/questions/52633342/cannot-resolve-symbol-springbootapplication-intellij-dea/52633454#52633454 


-----@DataJpaTest-----
When using @DataJpaTest annotation, if you get the error: 
"BeanCreationException: Error creating bean with name 'dataSource': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Cannot determine embedded database for tests."

Reason: By default DataJpaTest replaces your DataSource with an embedded database but you don't have one.
solution: add to your test class - @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
also, if you're using @DataJpaTest for Integration testing, then use @Rollback(value=false) otherwise you won't see changes in DB.

for more info, see: https://stackoverflow.com/questions/41315386/spring-boot-1-4-datajpatest-error-creating-bean-with-name-datasource

------reset mysql root password in mac-------
1. Go to system preferences > mysql > stop server
2. Open terminal and run: mysqld_safe --skip-grant-tables
3. Open a new terminal and run: mysql -u root
4. Run: ALTER USER 'root'@'localhost' IDENTIFIED BY 'ROOT';
5. Run: FLUSH PRIVILEGES;
6. Run: exit
